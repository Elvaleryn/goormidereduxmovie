{"ast":null,"code":"var _jsxFileName = \"/workspace/reduxmovieapp/movieapp/src/App.js\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { initializeFiltered } from './reducers/movieReducer';\nimport { initializePopular } from './reducers/popularReducer';\nimport { initializeSingleMovie } from './reducers/singleMovieReducer';\nimport Movies from './components/Movies';\nimport Movie from './components/Movie';\nimport PopularMovies from './components/PopularMovies';\nimport Filter from './components/Filter';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\nconst App = props => {\n  const fetchFiltered = props.initializeFiltered;\n  const fetchPopular = props.initializePopular;\n  console.log(props.filter);\n  const realFilter = props.filter.length === 0 ? 'dgsdgsgsgsgsdgsdgsdgsg' : props.filter;\n  useEffect(() => {\n    fetchFiltered(props.filter);\n  }, [props.filter]);\n  useEffect(() => {\n    fetchPopular();\n  }, [fetchPopular]);\n\n  const movieById = id => props.movies.find(a => a.id === Number(id));\n\n  const popularById = id => props.popular.find(a => a.id === Number(id));\n\n  if (props.filter.length === 0) {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Movieapp\"), React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(PopularMovies, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/:id\",\n      render: props => React.createElement(Movie, Object.assign({}, props, {\n        key: props.match.params.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Movieapp\"), React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => React.createElement(Movies, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/:id\",\n    render: props => React.createElement(Movie, Object.assign({}, props, {\n      key: props.match.params.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.movies,\n    popular: state.popular,\n    filter: state.filter\n  };\n};\n\nexport default connect(mapStateToProps, {\n  initializePopular,\n  initializeFiltered,\n  initializeSingleMovie\n})(App);","map":{"version":3,"sources":["/workspace/reduxmovieapp/movieapp/src/App.js"],"names":["React","useEffect","connect","initializeFiltered","initializePopular","initializeSingleMovie","Movies","Movie","PopularMovies","Filter","BrowserRouter","Router","Route","Link","Redirect","withRouter","Container","App","props","fetchFiltered","fetchPopular","console","log","filter","realFilter","length","movieById","id","movies","find","a","Number","popularById","popular","match","params","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { initializeFiltered } from './reducers/movieReducer'\nimport { initializePopular } from './reducers/popularReducer'\nimport { initializeSingleMovie } from './reducers/singleMovieReducer'\nimport Movies from './components/Movies'\nimport Movie from './components/Movie'\nimport PopularMovies from './components/PopularMovies'\nimport Filter from './components/Filter'\n\nimport {\n\tBrowserRouter as Router,\n\tRoute, Link, Redirect, withRouter\n} from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\n\nconst App = (props) => {\n\n\tconst fetchFiltered = props.initializeFiltered\n\tconst fetchPopular = props.initializePopular\n\tconsole.log(props.filter)\n\tconst realFilter = (props.filter.length === 0) ? 'dgsdgsgsgsgsdgsdgsdgsg' : props.filter\n\n\tuseEffect(() => { fetchFiltered(props.filter) }, [props.filter]) \n\tuseEffect(() => { fetchPopular() }, [fetchPopular]) \n\n\tconst movieById = (id) =>\n\t\tprops.movies.find(a => a.id === Number(id))\n\n\tconst popularById = (id) =>\n\t\tprops.popular.find(a => a.id === Number(id))\n\t\nif(props.filter.length === 0) {\n\treturn (\n\t\t<Container>\n\t\t\t<h2>Movieapp</h2>\n\t\t\t<Router>\n\t\t\t\t<Route exact path=\"/\" render={() =>\n\t\t\t\t\t<PopularMovies />\n\t\t\t\t} />\n\t\t\t\t<Route exact path=\"/:id\" render={(props) => <Movie {...props} key={props.match.params.id} />} />\n\t\t\t</Router>\n\t\t</Container>\n\t)\n}\n\treturn(\n<Container>\n\t\t\t<h2>Movieapp</h2>\n\t\t\t<Router>\n\t\t\t\t<Route exact path=\"/\" render={() =>\n\t\t\t\t\t<Movies />\n\t\t\t\t} />\n\t\t\t\t<Route exact path=\"/:id\" render={(props) => <Movie {...props} key={props.match.params.id} />} />\n\t\t\t</Router>\n\t\t</Container>\n\t)\n}\n\t\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tmovies: state.movies,\n\t\tpopular: state.popular,\n\t\tfilter: state.filter\n\t}\n}\n\nexport default connect(mapStateToProps, { initializePopular, initializeFiltered, initializeSingleMovie })(App)\n"]},"metadata":{},"sourceType":"module"}