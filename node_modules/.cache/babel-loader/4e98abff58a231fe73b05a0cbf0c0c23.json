{"ast":null,"code":"var _jsxFileName = \"/workspace/reduxmovieapp/movieapp/src/components/Movie.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { initializeSingleMovie } from '../reducers/singleMovieReducer';\nimport { getGenres } from '../reducers/genresReducer';\nimport { fetchActors } from '../reducers/actorsReducer';\nimport { fetchCrew } from '../reducers/crewReducer';\n\nconst Movie = props => {\n  useEffect(() => {\n    props.initializeSingleMovie(props.match.params.id);\n  }, [props]);\n  useEffect(() => {\n    props.getGenres(props.match.params.id);\n  }, [props.match.params.id]);\n  useEffect(() => {\n    props.fetchActors(props.match.params.id);\n  }, [props.match.params.id]);\n  useEffect(() => {\n    props.fetchCrew(props.match.params.id);\n  }, [props.match.params.id]);\n  console.log(props.genres);\n  console.log(props.actors);\n  console.log(props.crew);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.singleMovie.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.singleMovie.overview));\n};\n\nconst mapStateToProps = state => {\n  return {\n    singleMovie: state.singleMovie,\n    genres: state.genres,\n    actors: state.actors,\n    crew: state.crew\n  };\n};\n\nexport default connect(mapStateToProps, {\n  initializeSingleMovie,\n  getGenres,\n  fetchActors,\n  fetchCrew\n})(Movie);","map":{"version":3,"sources":["/workspace/reduxmovieapp/movieapp/src/components/Movie.js"],"names":["React","connect","useEffect","initializeSingleMovie","getGenres","fetchActors","fetchCrew","Movie","props","match","params","id","console","log","genres","actors","crew","singleMovie","title","overview","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,SAAT,QAA0B,yBAA1B;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAExBN,EAAAA,SAAS,CAAC,MAAM;AACbM,IAAAA,KAAK,CAACL,qBAAN,CAA4BK,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAA/C;AACD,GAFO,EAEL,CAACH,KAAD,CAFK,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACbM,IAAAA,KAAK,CAACJ,SAAN,CAAgBI,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAAnC;AACD,GAFO,EAEL,CAACH,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAFK,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACbM,IAAAA,KAAK,CAACH,WAAN,CAAkBG,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACD,GAFO,EAEL,CAACH,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAFK,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACbM,IAAAA,KAAK,CAACF,SAAN,CAAgBE,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAAnC;AACD,GAFO,EAEL,CAACH,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAFK,CAAT;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,MAAlB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACO,MAAlB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACQ,IAAlB;AAEA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,KAAK,CAACS,WAAN,CAAkBC,KAAvB,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,KAAK,CAACS,WAAN,CAAkBE,QAAtB,CAFD,CADD;AAMA,CA5BD;;AA8BA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNJ,IAAAA,WAAW,EAAEI,KAAK,CAACJ,WADb;AAENH,IAAAA,MAAM,EAAEO,KAAK,CAACP,MAFR;AAGNC,IAAAA,MAAM,EAAEM,KAAK,CAACN,MAHR;AAINC,IAAAA,IAAI,EAAEK,KAAK,CAACL;AAJN,GAAP;AAMA,CAPD;;AASA,eAAef,OAAO,CACrBmB,eADqB,EAErB;AAACjB,EAAAA,qBAAD;AAAwBC,EAAAA,SAAxB;AAAmCC,EAAAA,WAAnC;AAAgDC,EAAAA;AAAhD,CAFqB,CAAP,CAGbC,KAHa,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { useEffect } from 'react'\nimport { initializeSingleMovie } from '../reducers/singleMovieReducer'\nimport { getGenres } from '../reducers/genresReducer'\nimport { fetchActors } from '../reducers/actorsReducer'\nimport { fetchCrew } from '../reducers/crewReducer'\nconst Movie = (props) => {\n\t\n\tuseEffect(() => {\n    props.initializeSingleMovie(props.match.params.id)\n  }, [props])\n\t\n\tuseEffect(() => {\n    props.getGenres(props.match.params.id)\n  }, [props.match.params.id])\n\t\n\tuseEffect(() => {\n    props.fetchActors(props.match.params.id)\n  }, [props.match.params.id])\n\t\n\tuseEffect(() => {\n    props.fetchCrew(props.match.params.id)\n  }, [props.match.params.id])\n\t\n\tconsole.log(props.genres)\n\tconsole.log(props.actors)\n\tconsole.log(props.crew)\n\t\n\treturn (\n\t\t<div>\n\t\t\t<h2>{props.singleMovie.title}</h2>\n\t\t\t<p>{props.singleMovie.overview}</p>\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsingleMovie: state.singleMovie,\n\t\tgenres: state.genres,\n\t\tactors: state.actors,\n\t\tcrew: state.crew\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\t{initializeSingleMovie, getGenres, fetchActors, fetchCrew}\n)(Movie)"]},"metadata":{},"sourceType":"module"}